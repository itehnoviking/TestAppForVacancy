@model OrderEditViewModel

<div class="container">
    <h2>Edit article</h2>
    <div class="row gx-5">
        <form asp-controller="Order" asp-action="Edit" asp-antiforgery="true" method="post">
            <div>
                @* <input type="hidden" asp-for="Id" /> *@
                <div class="mb-3">
                    <label class="col-sm-2 col-form-label" asp-for="Number"></label>
                    <input class="form-control" type="text" asp-for="Number">
                </div>
                <div class="mb-3">
                    <label class="col-sm-2 col-form-label" asp-for="Date"></label>
                    <input type="datetime-local" class="form-control" asp-for="Date">
                </div>
                <div class="mb-3">
                    @Html.LabelFor(model => model.ProviderId, "Provider")
                    <select asp-for="ProviderId" asp-items="Model.ProviderNameAndIdModels">
                        <option selected="selected" disabled="disabled">Select Provider</option>
                    </select>
                    <span asp-validation-for="ProviderId"></span>
                </div>
                
                <div>
                    <h5>OrderItems</h5>
                    <div class="container">
                        <div class="mb-3">
                            <!-- Ваши существующие поля формы -->

                            @foreach (var orderItem in @Model.OrderItems)
                            {
                                <div class="offset-2 col-8">
                                    <div class="card">
                                        <h5 class="card-title">@orderItem.Name</h5>
                                        <div class="card-body">
                                            Quantity: @orderItem.Quantity
                                        </div>
                                        <div class="card-footer text-muted">
                                            Unit: @orderItem.Unit
                                        </div>
                                        <button class="editButton">Редактировать</button>
                                        <button class="removeButton">Удалить</button>
                                    </div>
                                </div>
                            }
                            <button id="addButton" type="button" class="btn btn-outline-secondary">Add Order Item</button>
                        </div>
                    </div>

                </div>
                
            </div>
            <button type="submit" class="btn btn-primary">Submit</button>
        </form>
    </div>
</div>

                                    
                                    
@section Scripts
    {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Получаем элементы DOM
            var orderItemsWrapper = document.getElementById("orderItemsWrapper");
            var editButtons = document.querySelectorAll(".editButton");
            var addButton = document.getElementById("addButton");

            // Добавляем обработчики событий для кнопок "Редактировать"
            editButtons.forEach(function (button) {
                button.addEventListener("click", function (e) {
                    e.preventDefault();
                    // Открываем форму для редактирования OrderItem
                    // ...
                });
            });

            // Добавляем обработчик события для кнопки "Добавить новый OrderItem"
            addNewButton.addEventListener("click", function (e) {
                e.preventDefault();
                var newIndex = orderItemsWrapper.children.length;
                var newOrderItemDiv = document.createElement("div");
                newOrderItemDiv.classList.add("order-item");

                var inputName = document.createElement("input");
                inputName.setAttribute("type", "text");
                inputName.setAttribute("name", "OrderItems[" + newIndex + "].Name");
                newOrderItemDiv.appendChild(inputName);

                var inputQuantity = document.createElement("input");
                inputQuantity.setAttribute("type", "text");
                inputQuantity.setAttribute("name", "OrderItems[" + newIndex + "].Quantity");
                newOrderItemDiv.appendChild(inputQuantity);

                var inputPrice = document.createElement("input");
                inputPrice.setAttribute("type", "text");
                inputPrice.setAttribute("name", "OrderItems[" + newIndex + "].Unit");
                newOrderItemDiv.appendChild(inputPrice);

                var removeButton = document.createElement("a");
                removeButton.setAttribute("href", "#");
                removeButton.classList.add("removeButton");
                removeButton.textContent = "Remove";
                newOrderItemDiv.appendChild(removeButton);

                orderItemsWrapper.appendChild(newOrderItemDiv);
            });

            // Добавляем обработчик события для удаления OrderItem
            orderItemsWrapper.addEventListener("click", function (e) {
                if (e.target.classList.contains("removeButton")) {
                    e.preventDefault();
                    e.target.parentElement.remove();
                }
            });
        });
    </script>

}