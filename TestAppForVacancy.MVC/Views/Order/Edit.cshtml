@model OrderEditViewModel

@{
    int a = 0;



    <div class="container">
        <h2>Edit article</h2>
        <div class="row gx-5">
            <form asp-controller="Order" asp-action="Edit" asp-antiforgery="true" method="post">

                <div>
                    <input type="hidden" asp-for="Id" />
                    <div class="mb-3">
                        <label class="col-sm-2 col-form-label" asp-for="Number"></label>
                        <input class="form-control" type="text" asp-for="Number">
                    </div>
                    <div class="mb-3">
                        <label class="col-sm-2 col-form-label" asp-for="Date"></label>
                        <input type="datetime-local" class="form-control" asp-for="Date">
                    </div>
                    <div class="mb-3">
                        @Html.LabelFor(model => model.ProviderId, "Provider")
                        <select asp-for="ProviderId" asp-items="Model.ProviderNameAndIdModels">
                            <option selected="selected" disabled="disabled">Select Provider</option>
                        </select>
                        <span asp-validation-for="ProviderId"></span>
                    </div>

                    <div>
                        <h2>Order Items</h2>
                        <div class="mb-3">

                            @foreach (var orderItem in @Model.OrderItems)
                            {
                                <br/>
                                <hr/>
                                <div class="mb-3">
                                    <label class="col-sm-2 col-form-label" asp-for="@Model.OrderItems[a].Name"></label>
                                    <input class="form-control" type="text" asp-for="@Model.OrderItems[a].Name" name="OrderItems[@a].Name">
                                    <label class="col-sm-2 col-form-label" asp-for="@Model.OrderItems[a].Quantity"></label>
                                    <input class="form-control" type="text" asp-for="@Model.OrderItems[a].Quantity" name="OrderItems[@a].Quantity">
                                    <label class="col-sm-2 col-form-label" asp-for="@Model.OrderItems[a].Unit"></label>
                                    <input class="form-control" type="text" asp-for="@Model.OrderItems[a].Unit" name="OrderItems[@a].Unit">
                                </div>

                                a++;
                            }
                            <div id="orderItemsWrapper" class="row gx-5">
                                <div>
                                    <input type="text" name="OrderItems[@a].Name"/>
                                    <input type="text" name="OrderItems[@a].Quantity"/>
                                    <input type="text" name="OrderItems[@a].Unit"/>
                                    <a href="#" class="removeButton">Remove</a>
                                </div>
                            </div>


                            <button id="addButton" type="button" class="btn btn-outline-secondary">Add Order Item</button>

                        </div>
                    </div>


                </div>
                <button type="submit" class="btn btn-primary">Submit</button>
            </form>

        </div>
    </div>




    @section Scripts
        {
        <script>
            document.addEventListener("DOMContentLoaded", function () {
                var addButton = document.getElementById("addButton");
                var orderItemsWrapper = document.getElementById("orderItemsWrapper");

                addButton.addEventListener("click", function (e) {
                    e.preventDefault();

                    var newIndex = @a + 1;
                    var newOrderItemDiv = document.createElement("div");
                    newOrderItemDiv.classList.add("order-item");

                    var inputName = document.createElement("input");
                    inputName.setAttribute("type", "text");
                    inputName.setAttribute("name", "OrderItems[" + newIndex + "].Name");
                    newOrderItemDiv.appendChild(inputName);

                    var inputQuantity = document.createElement("input");
                    inputQuantity.setAttribute("type", "text");
                    inputQuantity.setAttribute("name", "OrderItems[" + newIndex + "].Quantity");
                    newOrderItemDiv.appendChild(inputQuantity);

                    var inputPrice = document.createElement("input");
                    inputPrice.setAttribute("type", "text");
                    inputPrice.setAttribute("name", "OrderItems[" + newIndex + "].Unit");
                    newOrderItemDiv.appendChild(inputPrice);

                    var removeButton = document.createElement("a");
                    removeButton.setAttribute("href", "#");
                    removeButton.classList.add("removeButton");
                    removeButton.textContent = "Remove";
                    newOrderItemDiv.appendChild(removeButton);

                    orderItemsWrapper.appendChild(newOrderItemDiv);
                });

                orderItemsWrapper.addEventListener("click", function (e) {
                    if (e.target.classList.contains("removeButton")) {
                        e.preventDefault();
                        e.target.parentElement.remove();
                    }
                });
            });
        </script>

    }
}





